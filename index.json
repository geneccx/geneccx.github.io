[{"content":"Backstory Feel free to jump to the technical details if you hate stories (you monster).\nI\u0026rsquo;ve always been somewhat interested in racing games. However, the barrier to entry can be pretty high. Racing wheels start at about $120 CAD plus another $60 for a game. I was interested, but not $200 interested.\nThe past year, my sister introduced me to Amazon return auctions. Auctioneers buy pallets from Amazon full of returned items (which they would otherwise have just tossed away) and auction them off for a decent deal. It\u0026rsquo;s a nice feeling to be able to hunt for bargains and at the same time reduce harm to the environment.\nThis time around, there was a Thrustmaster Ferrari 458 Spider Edition listed as one of the lots. Brand new! I was able to win it for a fantastic price, along with a shiny new air fryer and some fancy LED lights. Sweet haul.\nLater on during the week, my sister dropped off the haul (thanks, sis!), and I was excited to play with my new toys.\n  Ferrari 458 Spider EditionWell you probably see where this is going, or there would be no blog post.\n  I plugged the racing into my PC, ready to race. I booted up Forza Horizon 4 AAAAAND\u0026hellip;\nNothing. The wheel wouldn\u0026rsquo;t steer. The buttons didn\u0026rsquo;t work. The acceleration and breaks didn\u0026rsquo;t do anything. I thought this was PC compatible! Alas, there would be no racing ðŸ˜¢. Tragic day.\nBewildered, I started googling for more details.\nOn the Thrustmaster support page, it says that the same wheel is not supported on PC:\n The Ferrari 458 Spider RW is an Xbox One compliant racing wheel.\nIt is not supported by Windows platforms, and there are no drivers for it to work on Windows.\n False advertisement from Best Buy. Thanks for nothing ðŸ˜¡.\nOver the next ten minutes, I rapidly went through the five stages of grief. This sucked! All of my other auction winnings were great. I even researched this wheel, and Best Buy said it was compatible with PC! This one stuck out like a sore thumb. Would I have to sell this steering wheel and buy a new one? Ugh, so much work.\nBut enough grieving. It was time to act. I wasn\u0026rsquo;t about to admit defeat. I can accept that there are no drivers on PC\u0026hellip; yet.\nSo, like a totally normal and rational person - rather than just buying a compatible wheel, I decided that the optimal course of action would be to write a driver for this racing wheel. It\u0026rsquo;s the best use of my time, trust me. I\u0026rsquo;m totally not being stubborn, right?!\nSpeaking of positive traits, being the lazy efficient person I am, I knew that the first thing to do when approaching a problem is to find someone else\u0026rsquo;s solution. After all, \u0026ldquo;Knowledge is power, France is bacon.\u0026rdquo;\nBack to googling.\nThe Research After some searching, I landed upon https://linustechtips.com/topic/576104-how-to-use-thrustmaster-ferrari-458-spyder-steering-wheel-on-pc/. Here, a user named Endend linked to a driver for the Xbox One controller, which supposedly works for the wheel.\nI installed it and tested it out. All the buttons worked on the wheel, but not the actual steering or the pedals. The Windows device manager still showed the wheel as a generic device:\nHowever, scrolling a bit further down in the thread, I found this curiosity:\nIt looks like this person\u0026rsquo;s copy of Forza Horizon 4 was able to detect the wheel, and what\u0026rsquo;s more, it was fully working. How is this possible?\nAs it turns out, Microsoft games support this racing wheel natively. I had Forza Horizon 4 on Steam, but for whatever reason, that did not work. So I signed up for the $1 trial of Xbox game pass and installed Forza Horizon 5 from the Xbox store:\nIt works, but how?\nAs it turns out, Xbox One games can be written using the Universal Windows Platform. Digging into the game programming section, I found specific support for racing wheel and force feedback through an API called Windows.Gaming.Input. The cool thing is that this is also available on Windows.\nHowever, games had to specifically use this API to interact with my racing wheel, and pretty much the only ones that do that are the ones on the Xbox Store and not on Steam.\nTechnical Details The Thrustmaster Ferrari 458 Spider doesn\u0026rsquo;t work on PC for anything other than the Xbox store.\nI, however, endeavored to change that. So I did a bunch of research and learned about all the different ways that games could support controllers.\nWhat do games use for controller (and racing wheel) support?\n DirectInput. A super old interface to communicate and process data from hardware devices. This is not very commonly used as a lot of heavy lifting is required on the game developer\u0026rsquo;s part to implement device support. XInput. The more modern (but still quite old) way of doing it. This was designed specifically for Xbox 360 controllers, so all the buttons correspond to those on an Xbox 360 controller. Windows.Gaming.Input. This is the most modern one that I just found out about. Most games don\u0026rsquo;t use this as it comes with a nasty limitation: the game window must be focused to interact with any controllers, and it\u0026rsquo;s only supported in Windows 10 or newer, and definitely not Linux or macOS. There\u0026rsquo;s also Steam Input. This is Valve\u0026rsquo;s way of trying to unify all of these APIs. It works by intercepting the above APIs that games may use and adding a custom layer. This allows Steam to support cool features, like custom controller mappings (so you can change what buttons correspond to what actions, especially helpful for non-Xbox controllers like the PS5 controller) and remote play - using a controller over the internet, so you can play multiplayer games with your friends, or stream to your TV and play from your sofa. Sadly, this doesn\u0026rsquo;t work with racing wheels, as it\u0026rsquo;s only meant for controllers.  So now I had a plan. I would write my own version of XInput, which would translate all of the game\u0026rsquo;s requests to use the new Windows.Gaming.Input API.\nThe approach was this:\n Convert the RacingWheelReading.Wheel reading from an angle to the left and right joystick movements on an Xbox 360 controller Translate the acceleration and brake pedals to L and R triggers Map the rest of the buttons to Xbox 360 controls Replace the game\u0026rsquo;s version of the XInput library to use my translation layer  This required me to get familiar with the XInput API. Luckily, it\u0026rsquo;s pretty simple and consists only of a few functions.\nPerhaps even luckier, someone else had attempted a translation layer from XInput to Windows.Gaming.Input. However, this was for adding force feedback support for the triggers to the Xbox One controller.\nNow to adapt that to racing wheel support. I found that this driver uses the XInput subtype of XINPUT_DEVSUBTYPE_GAMEPAD. Since I was implementing a racing wheel, I used XINPUT_DEVSUBTYPE_WHEEL. Microsoft had some extremely helpful documentation here for how to do the proper mappings:\n Racing wheel controller. Left Stick X reports the wheel rotation, Right Trigger is the acceleration pedal, and Left Trigger is the brake pedal. Includes Directional Pad and most standard buttons (A, B, X, Y, START, BACK, LB, RB). LSB and RSB are optional.\n Perfect. So now, let\u0026rsquo;s glue it all together. Here\u0026rsquo;s the snippet of code that takes the wheel rotation and translates it into the left stick\u0026rsquo;s X value:\n\tpState-\u0026gt;Gamepad.sThumbLX = (state.Wheel \u0026gt;= 0) ?  state.Wheel * 32767 : state.Wheel * 32768; And for the acceleration and breaks:\n\tpState-\u0026gt;Gamepad.bRightTrigger = state.Throttle * 255; \tpState-\u0026gt;Gamepad.bLeftTrigger = state.Brake * 255; The rest was just a matter of trial and error to figure out which buttons corresponded to which.\nI replaced my Steam version of Forza Horizon 4\u0026rsquo;s with my custom XInput1_3.dll and booted the game up. I\u0026rsquo;m happy to report that it all worked perfectly!\nAs a bonus, I also downloaded the Euro Truck Simulator 2 Demo on Steam and tested it there. They\u0026rsquo;re using XInput 1.4, but luckily it worked even though I just renamed my wrapper to XInput1_4.dll.\nThe Result   I cut the video at an awkward time because I\u0026rsquo;m a terrible driver, and I crashed my car immediately afterward. Also, you should never hold a phone and film while driving. Also, my cat distracted me.\nI\u0026rsquo;ve made the source code available for my project on GitHub. It still needs some cleanup, but there\u0026rsquo;s enough to get everything going. You\u0026rsquo;ll have to compile it for yourself, though.\nI\u0026rsquo;m not sure what I\u0026rsquo;ll write up next, but I have a huge backlog, so worry not, dear reader; there will be plenty more content to come.\nMaybe next time, I\u0026rsquo;ll write up how I got Hexic HD (an Xbox One only game) working on the PC without an emulator. It\u0026rsquo;s a weird coincidence that these projects are Xbox-related.\nClosing My goal with this blog is to practice communicating in a concise, lighthearted, and engaging way while remaining technical. How\u0026rsquo;d I do? If you have some suggestions on improving my writing, I\u0026rsquo;d greatly appreciate it. At any rate, thanks for stopping by.\nBye for now! ðŸ‘‹\n","permalink":"https://geneccx.github.io/posts/xbox-racingwheel/","summary":"Backstory Feel free to jump to the technical details if you hate stories (you monster).\nI\u0026rsquo;ve always been somewhat interested in racing games. However, the barrier to entry can be pretty high. Racing wheels start at about $120 CAD plus another $60 for a game. I was interested, but not $200 interested.\nThe past year, my sister introduced me to Amazon return auctions. Auctioneers buy pallets from Amazon full of returned items (which they would otherwise have just tossed away) and auction them off for a decent deal.","title":"Getting an Xbox One Only Racing Wheel Working on Windows"},{"content":"The Premise I\u0026rsquo;ve started a blog to work on improving my communication through writing.\nThis will also help me accomplish two goals:\n Career growth. Clear and concise writing is essential to reach wider audiences, help process ideas, and solidify decisions. Project showcasing. I work on some fun (well, fun in my opinion) projects that I usually don\u0026rsquo;t document. I figure this is an opportunity to share some stories, much like many other interesting articles I\u0026rsquo;ve read.  I might share some random insights that I\u0026rsquo;ve collected through the different aspects of my life - be it work or just fun stuff. Mostly, I\u0026rsquo;ll be sticking to hobby projects, though.\nDesign considerations I\u0026rsquo;m still getting familiar with all the different technologies that power this blog, so expect to see some random things change here and there.\n Hugo generates this site. I wanted to host everything without a backend, so a static site generator was the first decision. It can even do fancy HTML5 figures:   Pickles powered WiFiMy cat incubating the internet radio waves so I can get that sweet 5G signal.\n   Typora is my editor of choice. The contents of this blog are written in Markdown, which is pretty much the standard for all sorts of technical documents. I figure it will be great practice. PaperMod is a great theme. I know everyone likes their dark mode, so I\u0026rsquo;ve made it the default (you\u0026rsquo;re welcome). Toggle it off at the top next to the blog title if you feel like burning your retinas like I do. Cactus for comments. Under the hood, this uses Matrix, an open-source, decentralized chat platform. This was tricky to set up - comments without a server aren\u0026rsquo;t trivial to implement. This might change; I\u0026rsquo;m undecided for now. Hopefully, there\u0026rsquo;s no spam ðŸ¤ž.  Closing thoughts Phew! Congratulations on making it this far on this extremely lengthy post ðŸ˜‰. I bet you\u0026rsquo;re just dying to know what the title means unless you can read Chinese, of course. Well, it says \u0026ldquo;Hello World!\u0026rdquo; I know; what a great way to start a software development blog, right?\nNext up, I\u0026rsquo;ll be sharing my most recent project - getting an Xbox-only racing wheel working on Windows. Stay tuned.\nI thrive off of feedback, and it\u0026rsquo;s one of many ways in which I can calibrate and figure out how to improve. If you have any thoughts, ideas, constructive criticism, please don\u0026rsquo;t hesitate to comment below.\nFinally, don\u0026rsquo;t forget to hit that like and subscribe button, and the bell icon for notifications.\nCheers,\nGene\n","permalink":"https://geneccx.github.io/posts/hello/","summary":"The Premise I\u0026rsquo;ve started a blog to work on improving my communication through writing.\nThis will also help me accomplish two goals:\n Career growth. Clear and concise writing is essential to reach wider audiences, help process ideas, and solidify decisions. Project showcasing. I work on some fun (well, fun in my opinion) projects that I usually don\u0026rsquo;t document. I figure this is an opportunity to share some stories, much like many other interesting articles I\u0026rsquo;ve read.","title":"ä½ å¥½ä¸–ç•Œ!"}]